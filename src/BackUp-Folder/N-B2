import React, { useState } from "react";
import { makeStart } from "../PathfindingVisualizer";
import "./Node.css";

let mouseIsPressed = false;
let startMouseIsPressed = false;
let finishMouseIsPressed = false;

const Node = ({
  row,
  col,
  isFinish,
  isStart,
  isWall,
  onMouseDown,
  onMouseEnter,
  onMouseUp,
  onMouseLeave,
}) => {
  const [wall, setWall] = useState(isWall);
  const [start, setStart] = useState(isStart);
  const [finish, setFinish] = useState(isFinish);

  const changeNode = () => {
    if (
      !start &&
      !finish &&
      mouseIsPressed &&
      !startMouseIsPressed &&
      !finishMouseIsPressed
    ) {
      setWall(!wall);
    }
  };

  const changeStart = () => {
    if (startMouseIsPressed) {
      setStart(!start);
    }
  };

  const changeFinish = () => {
    if (finishMouseIsPressed) {
      setFinish(!finish);
    }
  };

  const changeMouseIsPressed = () => {
    if (start) {
      startMouseIsPressed = !startMouseIsPressed;
    } else if (finish) {
      finishMouseIsPressed = !finishMouseIsPressed;
    } else {
      mouseIsPressed = !mouseIsPressed;
    }
  };

  const className = finish
    ? "node-finish"
    : start
    ? "node-start"
    : wall
    ? "node-wall"
    : "node";

  return (
    <div
      className={className}
      id={`node-${row}-${col}`}
      onMouseDown={() => {
        onMouseDown(row, col, isStart, isFinish);
        changeMouseIsPressed();
        changeNode();
      }}
      onMouseEnter={() => {
        onMouseEnter(row, col, isStart, isFinish);
        changeNode();
        changeStart();
        changeFinish();
      }}
      onMouseLeave={() => {
        onMouseLeave(row, col);
        changeStart();
        changeFinish();
      }}
      onMouseUp={() => {
        onMouseUp(row, col);
        changeMouseIsPressed();
      }}
    ></div>
  );
};

export default Node;
